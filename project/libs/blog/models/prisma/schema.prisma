// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id                 String   @id @default(uuid())
  userId             String   @map("user_id")
  typePost           String   @map("type_post")
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")
  isPublished        Boolean  @default(true) @map("is_published")
  title              String   @map("title")
  announcementPublic String?  @map("announcement_public")
  textPublic         String?  @map("text_public")
  videoUrl           String?  @map("video_url")
  image              String?  @map("image")
  textQuote          String?  @map("text_quote")
  quoteAuthor        String?  @map("quote_author")
  link               String?  @map("link")
  linkDescription    String?  @map("link_description")
  tags               String[] @map("tags")
  isRepost           Boolean? @default(false) @map("is_repost")
  originPostId       String?  @map("origin_post_id")
  originUserId       String?  @map("origin_user_id")

  comments Comment[]
  likes    Like[]

  @@index([title, tags])
  @@map("posts")
}

model Comment {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  postId    String   @map("post_id")
  createdAt DateTime @default(now()) @map("created_at")
  message   String

  Post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@map("comments")
}

model Like {
  id     String @id @default(uuid())
  userId String @map("user_id")
  postId String @map("post_id")

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
  @@map("likes")
}
